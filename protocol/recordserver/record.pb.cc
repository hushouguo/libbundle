// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: recordserver/record.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "recordserver/record.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace record {
class EntityCreateRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<EntityCreateRequest> {
} _EntityCreateRequest_default_instance_;
class EntityCreateResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<EntityCreateResponse> {
} _EntityCreateResponse_default_instance_;
class EntityRetrieveRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<EntityRetrieveRequest> {
} _EntityRetrieveRequest_default_instance_;
class EntityRetrieveResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<EntityRetrieveResponse> {
} _EntityRetrieveResponse_default_instance_;
class EntityUpdateRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<EntityUpdateRequest> {
} _EntityUpdateRequest_default_instance_;
class EntityUpdateResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<EntityUpdateResponse> {
} _EntityUpdateResponse_default_instance_;
class EntityDeleteRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<EntityDeleteRequest> {
} _EntityDeleteRequest_default_instance_;
class EntityDeleteResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<EntityDeleteResponse> {
} _EntityDeleteResponse_default_instance_;
class EntitySelectRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<EntitySelectRequest> {
} _EntitySelectRequest_default_instance_;
class EntitySelectResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<EntitySelectResponse> {
} _EntitySelectResponse_default_instance_;

namespace protobuf_recordserver_2frecord_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[10];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityCreateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityCreateRequest, shard_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityCreateRequest, table_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityCreateRequest, entity_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityCreateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityCreateResponse, shard_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityCreateResponse, table_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityCreateResponse, entityid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityRetrieveRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityRetrieveRequest, shard_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityRetrieveRequest, table_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityRetrieveRequest, entityid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityRetrieveResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityRetrieveResponse, shard_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityRetrieveResponse, table_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityRetrieveResponse, entity_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityUpdateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityUpdateRequest, shard_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityUpdateRequest, table_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityUpdateRequest, entity_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityUpdateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityUpdateResponse, shard_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityUpdateResponse, table_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityUpdateResponse, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityDeleteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityDeleteRequest, shard_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityDeleteRequest, table_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityDeleteRequest, entityid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityDeleteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityDeleteResponse, shard_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityDeleteResponse, table_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityDeleteResponse, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntitySelectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntitySelectRequest, shard_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntitySelectRequest, table_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntitySelectRequest, where_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntitySelectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntitySelectResponse, shard_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntitySelectResponse, table_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntitySelectResponse, entities_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(EntityCreateRequest)},
  { 8, -1, sizeof(EntityCreateResponse)},
  { 16, -1, sizeof(EntityRetrieveRequest)},
  { 24, -1, sizeof(EntityRetrieveResponse)},
  { 32, -1, sizeof(EntityUpdateRequest)},
  { 40, -1, sizeof(EntityUpdateResponse)},
  { 48, -1, sizeof(EntityDeleteRequest)},
  { 56, -1, sizeof(EntityDeleteResponse)},
  { 64, -1, sizeof(EntitySelectRequest)},
  { 72, -1, sizeof(EntitySelectResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_EntityCreateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EntityCreateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EntityRetrieveRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EntityRetrieveResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EntityUpdateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EntityUpdateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EntityDeleteRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EntityDeleteResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EntitySelectRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EntitySelectResponse_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "recordserver/record.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

}  // namespace

void TableStruct::Shutdown() {
  _EntityCreateRequest_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _EntityCreateResponse_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _EntityRetrieveRequest_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _EntityRetrieveResponse_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _EntityUpdateRequest_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _EntityUpdateResponse_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _EntityDeleteRequest_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _EntityDeleteResponse_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _EntitySelectRequest_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _EntitySelectResponse_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::bundle::protobuf_common_2fentity_2eproto::InitDefaults();
  _EntityCreateRequest_default_instance_.DefaultConstruct();
  _EntityCreateResponse_default_instance_.DefaultConstruct();
  _EntityRetrieveRequest_default_instance_.DefaultConstruct();
  _EntityRetrieveResponse_default_instance_.DefaultConstruct();
  _EntityUpdateRequest_default_instance_.DefaultConstruct();
  _EntityUpdateResponse_default_instance_.DefaultConstruct();
  _EntityDeleteRequest_default_instance_.DefaultConstruct();
  _EntityDeleteResponse_default_instance_.DefaultConstruct();
  _EntitySelectRequest_default_instance_.DefaultConstruct();
  _EntitySelectResponse_default_instance_.DefaultConstruct();
  _EntityCreateRequest_default_instance_.get_mutable()->entity_ = const_cast< ::bundle::Entity*>(
      ::bundle::Entity::internal_default_instance());
  _EntityRetrieveResponse_default_instance_.get_mutable()->entity_ = const_cast< ::bundle::Entity*>(
      ::bundle::Entity::internal_default_instance());
  _EntityUpdateRequest_default_instance_.get_mutable()->entity_ = const_cast< ::bundle::Entity*>(
      ::bundle::Entity::internal_default_instance());
  _EntitySelectResponse_default_instance_.get_mutable()->entities_ = const_cast< ::bundle::Entity*>(
      ::bundle::Entity::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\031recordserver/record.proto\022\006record\032\023com"
      "mon/entity.proto\"S\n\023EntityCreateRequest\022"
      "\r\n\005shard\030\001 \001(\r\022\r\n\005table\030\002 \001(\t\022\036\n\006entity\030"
      "\003 \001(\0132\016.bundle.Entity\"F\n\024EntityCreateRes"
      "ponse\022\r\n\005shard\030\001 \001(\r\022\r\n\005table\030\002 \001(\t\022\020\n\010e"
      "ntityid\030\003 \001(\004\"G\n\025EntityRetrieveRequest\022\r"
      "\n\005shard\030\001 \001(\r\022\r\n\005table\030\002 \001(\t\022\020\n\010entityid"
      "\030\003 \001(\004\"V\n\026EntityRetrieveResponse\022\r\n\005shar"
      "d\030\001 \001(\r\022\r\n\005table\030\002 \001(\t\022\036\n\006entity\030\003 \001(\0132\016"
      ".bundle.Entity\"S\n\023EntityUpdateRequest\022\r\n"
      "\005shard\030\001 \001(\r\022\r\n\005table\030\002 \001(\t\022\036\n\006entity\030\003 "
      "\001(\0132\016.bundle.Entity\"D\n\024EntityUpdateRespo"
      "nse\022\r\n\005shard\030\001 \001(\r\022\r\n\005table\030\002 \001(\t\022\016\n\006res"
      "ult\030\003 \001(\010\"E\n\023EntityDeleteRequest\022\r\n\005shar"
      "d\030\001 \001(\r\022\r\n\005table\030\002 \001(\t\022\020\n\010entityid\030\003 \001(\004"
      "\"D\n\024EntityDeleteResponse\022\r\n\005shard\030\001 \001(\r\022"
      "\r\n\005table\030\002 \001(\t\022\016\n\006result\030\003 \001(\010\"B\n\023Entity"
      "SelectRequest\022\r\n\005shard\030\001 \001(\r\022\r\n\005table\030\002 "
      "\001(\t\022\r\n\005where\030\003 \001(\t\"V\n\024EntitySelectRespon"
      "se\022\r\n\005shard\030\001 \001(\r\022\r\n\005table\030\002 \001(\t\022 \n\010enti"
      "ties\030\003 \001(\0132\016.bundle.Entityb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 834);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "recordserver/record.proto", &protobuf_RegisterTypes);
  ::bundle::protobuf_common_2fentity_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_recordserver_2frecord_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntityCreateRequest::kShardFieldNumber;
const int EntityCreateRequest::kTableFieldNumber;
const int EntityCreateRequest::kEntityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntityCreateRequest::EntityCreateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_recordserver_2frecord_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:record.EntityCreateRequest)
}
EntityCreateRequest::EntityCreateRequest(const EntityCreateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.table().size() > 0) {
    table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_);
  }
  if (from.has_entity()) {
    entity_ = new ::bundle::Entity(*from.entity_);
  } else {
    entity_ = NULL;
  }
  shard_ = from.shard_;
  // @@protoc_insertion_point(copy_constructor:record.EntityCreateRequest)
}

void EntityCreateRequest::SharedCtor() {
  table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&entity_, 0, reinterpret_cast<char*>(&shard_) -
    reinterpret_cast<char*>(&entity_) + sizeof(shard_));
  _cached_size_ = 0;
}

EntityCreateRequest::~EntityCreateRequest() {
  // @@protoc_insertion_point(destructor:record.EntityCreateRequest)
  SharedDtor();
}

void EntityCreateRequest::SharedDtor() {
  table_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete entity_;
  }
}

void EntityCreateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EntityCreateRequest::descriptor() {
  protobuf_recordserver_2frecord_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_recordserver_2frecord_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EntityCreateRequest& EntityCreateRequest::default_instance() {
  protobuf_recordserver_2frecord_2eproto::InitDefaults();
  return *internal_default_instance();
}

EntityCreateRequest* EntityCreateRequest::New(::google::protobuf::Arena* arena) const {
  EntityCreateRequest* n = new EntityCreateRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EntityCreateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:record.EntityCreateRequest)
  table_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && entity_ != NULL) {
    delete entity_;
  }
  entity_ = NULL;
  shard_ = 0u;
}

bool EntityCreateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:record.EntityCreateRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 shard = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shard_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string table = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->table().data(), this->table().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "record.EntityCreateRequest.table"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bundle.Entity entity = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_entity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:record.EntityCreateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:record.EntityCreateRequest)
  return false;
#undef DO_
}

void EntityCreateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:record.EntityCreateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 shard = 1;
  if (this->shard() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->shard(), output);
  }

  // string table = 2;
  if (this->table().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table().data(), this->table().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "record.EntityCreateRequest.table");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->table(), output);
  }

  // .bundle.Entity entity = 3;
  if (this->has_entity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->entity_, output);
  }

  // @@protoc_insertion_point(serialize_end:record.EntityCreateRequest)
}

::google::protobuf::uint8* EntityCreateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:record.EntityCreateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 shard = 1;
  if (this->shard() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->shard(), target);
  }

  // string table = 2;
  if (this->table().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table().data(), this->table().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "record.EntityCreateRequest.table");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->table(), target);
  }

  // .bundle.Entity entity = 3;
  if (this->has_entity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->entity_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:record.EntityCreateRequest)
  return target;
}

size_t EntityCreateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:record.EntityCreateRequest)
  size_t total_size = 0;

  // string table = 2;
  if (this->table().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->table());
  }

  // .bundle.Entity entity = 3;
  if (this->has_entity()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->entity_);
  }

  // uint32 shard = 1;
  if (this->shard() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->shard());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EntityCreateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:record.EntityCreateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const EntityCreateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EntityCreateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:record.EntityCreateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:record.EntityCreateRequest)
    MergeFrom(*source);
  }
}

void EntityCreateRequest::MergeFrom(const EntityCreateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:record.EntityCreateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.table().size() > 0) {

    table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_);
  }
  if (from.has_entity()) {
    mutable_entity()->::bundle::Entity::MergeFrom(from.entity());
  }
  if (from.shard() != 0) {
    set_shard(from.shard());
  }
}

void EntityCreateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:record.EntityCreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityCreateRequest::CopyFrom(const EntityCreateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:record.EntityCreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityCreateRequest::IsInitialized() const {
  return true;
}

void EntityCreateRequest::Swap(EntityCreateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EntityCreateRequest::InternalSwap(EntityCreateRequest* other) {
  table_.Swap(&other->table_);
  std::swap(entity_, other->entity_);
  std::swap(shard_, other->shard_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EntityCreateRequest::GetMetadata() const {
  protobuf_recordserver_2frecord_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_recordserver_2frecord_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EntityCreateRequest

// uint32 shard = 1;
void EntityCreateRequest::clear_shard() {
  shard_ = 0u;
}
::google::protobuf::uint32 EntityCreateRequest::shard() const {
  // @@protoc_insertion_point(field_get:record.EntityCreateRequest.shard)
  return shard_;
}
void EntityCreateRequest::set_shard(::google::protobuf::uint32 value) {
  
  shard_ = value;
  // @@protoc_insertion_point(field_set:record.EntityCreateRequest.shard)
}

// string table = 2;
void EntityCreateRequest::clear_table() {
  table_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EntityCreateRequest::table() const {
  // @@protoc_insertion_point(field_get:record.EntityCreateRequest.table)
  return table_.GetNoArena();
}
void EntityCreateRequest::set_table(const ::std::string& value) {
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:record.EntityCreateRequest.table)
}
#if LANG_CXX11
void EntityCreateRequest::set_table(::std::string&& value) {
  
  table_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:record.EntityCreateRequest.table)
}
#endif
void EntityCreateRequest::set_table(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:record.EntityCreateRequest.table)
}
void EntityCreateRequest::set_table(const char* value, size_t size) {
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:record.EntityCreateRequest.table)
}
::std::string* EntityCreateRequest::mutable_table() {
  
  // @@protoc_insertion_point(field_mutable:record.EntityCreateRequest.table)
  return table_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EntityCreateRequest::release_table() {
  // @@protoc_insertion_point(field_release:record.EntityCreateRequest.table)
  
  return table_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EntityCreateRequest::set_allocated_table(::std::string* table) {
  if (table != NULL) {
    
  } else {
    
  }
  table_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), table);
  // @@protoc_insertion_point(field_set_allocated:record.EntityCreateRequest.table)
}

// .bundle.Entity entity = 3;
bool EntityCreateRequest::has_entity() const {
  return this != internal_default_instance() && entity_ != NULL;
}
void EntityCreateRequest::clear_entity() {
  if (GetArenaNoVirtual() == NULL && entity_ != NULL) delete entity_;
  entity_ = NULL;
}
const ::bundle::Entity& EntityCreateRequest::entity() const {
  // @@protoc_insertion_point(field_get:record.EntityCreateRequest.entity)
  return entity_ != NULL ? *entity_
                         : *::bundle::Entity::internal_default_instance();
}
::bundle::Entity* EntityCreateRequest::mutable_entity() {
  
  if (entity_ == NULL) {
    entity_ = new ::bundle::Entity;
  }
  // @@protoc_insertion_point(field_mutable:record.EntityCreateRequest.entity)
  return entity_;
}
::bundle::Entity* EntityCreateRequest::release_entity() {
  // @@protoc_insertion_point(field_release:record.EntityCreateRequest.entity)
  
  ::bundle::Entity* temp = entity_;
  entity_ = NULL;
  return temp;
}
void EntityCreateRequest::set_allocated_entity(::bundle::Entity* entity) {
  delete entity_;
  entity_ = entity;
  if (entity) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:record.EntityCreateRequest.entity)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntityCreateResponse::kShardFieldNumber;
const int EntityCreateResponse::kTableFieldNumber;
const int EntityCreateResponse::kEntityidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntityCreateResponse::EntityCreateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_recordserver_2frecord_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:record.EntityCreateResponse)
}
EntityCreateResponse::EntityCreateResponse(const EntityCreateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.table().size() > 0) {
    table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_);
  }
  ::memcpy(&entityid_, &from.entityid_,
    reinterpret_cast<char*>(&shard_) -
    reinterpret_cast<char*>(&entityid_) + sizeof(shard_));
  // @@protoc_insertion_point(copy_constructor:record.EntityCreateResponse)
}

void EntityCreateResponse::SharedCtor() {
  table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&entityid_, 0, reinterpret_cast<char*>(&shard_) -
    reinterpret_cast<char*>(&entityid_) + sizeof(shard_));
  _cached_size_ = 0;
}

EntityCreateResponse::~EntityCreateResponse() {
  // @@protoc_insertion_point(destructor:record.EntityCreateResponse)
  SharedDtor();
}

void EntityCreateResponse::SharedDtor() {
  table_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EntityCreateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EntityCreateResponse::descriptor() {
  protobuf_recordserver_2frecord_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_recordserver_2frecord_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EntityCreateResponse& EntityCreateResponse::default_instance() {
  protobuf_recordserver_2frecord_2eproto::InitDefaults();
  return *internal_default_instance();
}

EntityCreateResponse* EntityCreateResponse::New(::google::protobuf::Arena* arena) const {
  EntityCreateResponse* n = new EntityCreateResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EntityCreateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:record.EntityCreateResponse)
  table_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&entityid_, 0, reinterpret_cast<char*>(&shard_) -
    reinterpret_cast<char*>(&entityid_) + sizeof(shard_));
}

bool EntityCreateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:record.EntityCreateResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 shard = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shard_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string table = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->table().data(), this->table().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "record.EntityCreateResponse.table"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 entityid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &entityid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:record.EntityCreateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:record.EntityCreateResponse)
  return false;
#undef DO_
}

void EntityCreateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:record.EntityCreateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 shard = 1;
  if (this->shard() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->shard(), output);
  }

  // string table = 2;
  if (this->table().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table().data(), this->table().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "record.EntityCreateResponse.table");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->table(), output);
  }

  // uint64 entityid = 3;
  if (this->entityid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->entityid(), output);
  }

  // @@protoc_insertion_point(serialize_end:record.EntityCreateResponse)
}

::google::protobuf::uint8* EntityCreateResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:record.EntityCreateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 shard = 1;
  if (this->shard() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->shard(), target);
  }

  // string table = 2;
  if (this->table().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table().data(), this->table().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "record.EntityCreateResponse.table");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->table(), target);
  }

  // uint64 entityid = 3;
  if (this->entityid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->entityid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:record.EntityCreateResponse)
  return target;
}

size_t EntityCreateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:record.EntityCreateResponse)
  size_t total_size = 0;

  // string table = 2;
  if (this->table().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->table());
  }

  // uint64 entityid = 3;
  if (this->entityid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->entityid());
  }

  // uint32 shard = 1;
  if (this->shard() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->shard());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EntityCreateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:record.EntityCreateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const EntityCreateResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EntityCreateResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:record.EntityCreateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:record.EntityCreateResponse)
    MergeFrom(*source);
  }
}

void EntityCreateResponse::MergeFrom(const EntityCreateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:record.EntityCreateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.table().size() > 0) {

    table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_);
  }
  if (from.entityid() != 0) {
    set_entityid(from.entityid());
  }
  if (from.shard() != 0) {
    set_shard(from.shard());
  }
}

void EntityCreateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:record.EntityCreateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityCreateResponse::CopyFrom(const EntityCreateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:record.EntityCreateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityCreateResponse::IsInitialized() const {
  return true;
}

void EntityCreateResponse::Swap(EntityCreateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EntityCreateResponse::InternalSwap(EntityCreateResponse* other) {
  table_.Swap(&other->table_);
  std::swap(entityid_, other->entityid_);
  std::swap(shard_, other->shard_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EntityCreateResponse::GetMetadata() const {
  protobuf_recordserver_2frecord_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_recordserver_2frecord_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EntityCreateResponse

// uint32 shard = 1;
void EntityCreateResponse::clear_shard() {
  shard_ = 0u;
}
::google::protobuf::uint32 EntityCreateResponse::shard() const {
  // @@protoc_insertion_point(field_get:record.EntityCreateResponse.shard)
  return shard_;
}
void EntityCreateResponse::set_shard(::google::protobuf::uint32 value) {
  
  shard_ = value;
  // @@protoc_insertion_point(field_set:record.EntityCreateResponse.shard)
}

// string table = 2;
void EntityCreateResponse::clear_table() {
  table_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EntityCreateResponse::table() const {
  // @@protoc_insertion_point(field_get:record.EntityCreateResponse.table)
  return table_.GetNoArena();
}
void EntityCreateResponse::set_table(const ::std::string& value) {
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:record.EntityCreateResponse.table)
}
#if LANG_CXX11
void EntityCreateResponse::set_table(::std::string&& value) {
  
  table_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:record.EntityCreateResponse.table)
}
#endif
void EntityCreateResponse::set_table(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:record.EntityCreateResponse.table)
}
void EntityCreateResponse::set_table(const char* value, size_t size) {
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:record.EntityCreateResponse.table)
}
::std::string* EntityCreateResponse::mutable_table() {
  
  // @@protoc_insertion_point(field_mutable:record.EntityCreateResponse.table)
  return table_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EntityCreateResponse::release_table() {
  // @@protoc_insertion_point(field_release:record.EntityCreateResponse.table)
  
  return table_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EntityCreateResponse::set_allocated_table(::std::string* table) {
  if (table != NULL) {
    
  } else {
    
  }
  table_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), table);
  // @@protoc_insertion_point(field_set_allocated:record.EntityCreateResponse.table)
}

// uint64 entityid = 3;
void EntityCreateResponse::clear_entityid() {
  entityid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 EntityCreateResponse::entityid() const {
  // @@protoc_insertion_point(field_get:record.EntityCreateResponse.entityid)
  return entityid_;
}
void EntityCreateResponse::set_entityid(::google::protobuf::uint64 value) {
  
  entityid_ = value;
  // @@protoc_insertion_point(field_set:record.EntityCreateResponse.entityid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntityRetrieveRequest::kShardFieldNumber;
const int EntityRetrieveRequest::kTableFieldNumber;
const int EntityRetrieveRequest::kEntityidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntityRetrieveRequest::EntityRetrieveRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_recordserver_2frecord_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:record.EntityRetrieveRequest)
}
EntityRetrieveRequest::EntityRetrieveRequest(const EntityRetrieveRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.table().size() > 0) {
    table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_);
  }
  ::memcpy(&entityid_, &from.entityid_,
    reinterpret_cast<char*>(&shard_) -
    reinterpret_cast<char*>(&entityid_) + sizeof(shard_));
  // @@protoc_insertion_point(copy_constructor:record.EntityRetrieveRequest)
}

void EntityRetrieveRequest::SharedCtor() {
  table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&entityid_, 0, reinterpret_cast<char*>(&shard_) -
    reinterpret_cast<char*>(&entityid_) + sizeof(shard_));
  _cached_size_ = 0;
}

EntityRetrieveRequest::~EntityRetrieveRequest() {
  // @@protoc_insertion_point(destructor:record.EntityRetrieveRequest)
  SharedDtor();
}

void EntityRetrieveRequest::SharedDtor() {
  table_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EntityRetrieveRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EntityRetrieveRequest::descriptor() {
  protobuf_recordserver_2frecord_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_recordserver_2frecord_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EntityRetrieveRequest& EntityRetrieveRequest::default_instance() {
  protobuf_recordserver_2frecord_2eproto::InitDefaults();
  return *internal_default_instance();
}

EntityRetrieveRequest* EntityRetrieveRequest::New(::google::protobuf::Arena* arena) const {
  EntityRetrieveRequest* n = new EntityRetrieveRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EntityRetrieveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:record.EntityRetrieveRequest)
  table_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&entityid_, 0, reinterpret_cast<char*>(&shard_) -
    reinterpret_cast<char*>(&entityid_) + sizeof(shard_));
}

bool EntityRetrieveRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:record.EntityRetrieveRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 shard = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shard_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string table = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->table().data(), this->table().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "record.EntityRetrieveRequest.table"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 entityid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &entityid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:record.EntityRetrieveRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:record.EntityRetrieveRequest)
  return false;
#undef DO_
}

void EntityRetrieveRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:record.EntityRetrieveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 shard = 1;
  if (this->shard() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->shard(), output);
  }

  // string table = 2;
  if (this->table().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table().data(), this->table().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "record.EntityRetrieveRequest.table");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->table(), output);
  }

  // uint64 entityid = 3;
  if (this->entityid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->entityid(), output);
  }

  // @@protoc_insertion_point(serialize_end:record.EntityRetrieveRequest)
}

::google::protobuf::uint8* EntityRetrieveRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:record.EntityRetrieveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 shard = 1;
  if (this->shard() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->shard(), target);
  }

  // string table = 2;
  if (this->table().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table().data(), this->table().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "record.EntityRetrieveRequest.table");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->table(), target);
  }

  // uint64 entityid = 3;
  if (this->entityid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->entityid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:record.EntityRetrieveRequest)
  return target;
}

size_t EntityRetrieveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:record.EntityRetrieveRequest)
  size_t total_size = 0;

  // string table = 2;
  if (this->table().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->table());
  }

  // uint64 entityid = 3;
  if (this->entityid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->entityid());
  }

  // uint32 shard = 1;
  if (this->shard() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->shard());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EntityRetrieveRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:record.EntityRetrieveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const EntityRetrieveRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EntityRetrieveRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:record.EntityRetrieveRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:record.EntityRetrieveRequest)
    MergeFrom(*source);
  }
}

void EntityRetrieveRequest::MergeFrom(const EntityRetrieveRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:record.EntityRetrieveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.table().size() > 0) {

    table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_);
  }
  if (from.entityid() != 0) {
    set_entityid(from.entityid());
  }
  if (from.shard() != 0) {
    set_shard(from.shard());
  }
}

void EntityRetrieveRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:record.EntityRetrieveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityRetrieveRequest::CopyFrom(const EntityRetrieveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:record.EntityRetrieveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityRetrieveRequest::IsInitialized() const {
  return true;
}

void EntityRetrieveRequest::Swap(EntityRetrieveRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EntityRetrieveRequest::InternalSwap(EntityRetrieveRequest* other) {
  table_.Swap(&other->table_);
  std::swap(entityid_, other->entityid_);
  std::swap(shard_, other->shard_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EntityRetrieveRequest::GetMetadata() const {
  protobuf_recordserver_2frecord_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_recordserver_2frecord_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EntityRetrieveRequest

// uint32 shard = 1;
void EntityRetrieveRequest::clear_shard() {
  shard_ = 0u;
}
::google::protobuf::uint32 EntityRetrieveRequest::shard() const {
  // @@protoc_insertion_point(field_get:record.EntityRetrieveRequest.shard)
  return shard_;
}
void EntityRetrieveRequest::set_shard(::google::protobuf::uint32 value) {
  
  shard_ = value;
  // @@protoc_insertion_point(field_set:record.EntityRetrieveRequest.shard)
}

// string table = 2;
void EntityRetrieveRequest::clear_table() {
  table_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EntityRetrieveRequest::table() const {
  // @@protoc_insertion_point(field_get:record.EntityRetrieveRequest.table)
  return table_.GetNoArena();
}
void EntityRetrieveRequest::set_table(const ::std::string& value) {
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:record.EntityRetrieveRequest.table)
}
#if LANG_CXX11
void EntityRetrieveRequest::set_table(::std::string&& value) {
  
  table_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:record.EntityRetrieveRequest.table)
}
#endif
void EntityRetrieveRequest::set_table(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:record.EntityRetrieveRequest.table)
}
void EntityRetrieveRequest::set_table(const char* value, size_t size) {
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:record.EntityRetrieveRequest.table)
}
::std::string* EntityRetrieveRequest::mutable_table() {
  
  // @@protoc_insertion_point(field_mutable:record.EntityRetrieveRequest.table)
  return table_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EntityRetrieveRequest::release_table() {
  // @@protoc_insertion_point(field_release:record.EntityRetrieveRequest.table)
  
  return table_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EntityRetrieveRequest::set_allocated_table(::std::string* table) {
  if (table != NULL) {
    
  } else {
    
  }
  table_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), table);
  // @@protoc_insertion_point(field_set_allocated:record.EntityRetrieveRequest.table)
}

// uint64 entityid = 3;
void EntityRetrieveRequest::clear_entityid() {
  entityid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 EntityRetrieveRequest::entityid() const {
  // @@protoc_insertion_point(field_get:record.EntityRetrieveRequest.entityid)
  return entityid_;
}
void EntityRetrieveRequest::set_entityid(::google::protobuf::uint64 value) {
  
  entityid_ = value;
  // @@protoc_insertion_point(field_set:record.EntityRetrieveRequest.entityid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntityRetrieveResponse::kShardFieldNumber;
const int EntityRetrieveResponse::kTableFieldNumber;
const int EntityRetrieveResponse::kEntityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntityRetrieveResponse::EntityRetrieveResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_recordserver_2frecord_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:record.EntityRetrieveResponse)
}
EntityRetrieveResponse::EntityRetrieveResponse(const EntityRetrieveResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.table().size() > 0) {
    table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_);
  }
  if (from.has_entity()) {
    entity_ = new ::bundle::Entity(*from.entity_);
  } else {
    entity_ = NULL;
  }
  shard_ = from.shard_;
  // @@protoc_insertion_point(copy_constructor:record.EntityRetrieveResponse)
}

void EntityRetrieveResponse::SharedCtor() {
  table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&entity_, 0, reinterpret_cast<char*>(&shard_) -
    reinterpret_cast<char*>(&entity_) + sizeof(shard_));
  _cached_size_ = 0;
}

EntityRetrieveResponse::~EntityRetrieveResponse() {
  // @@protoc_insertion_point(destructor:record.EntityRetrieveResponse)
  SharedDtor();
}

void EntityRetrieveResponse::SharedDtor() {
  table_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete entity_;
  }
}

void EntityRetrieveResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EntityRetrieveResponse::descriptor() {
  protobuf_recordserver_2frecord_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_recordserver_2frecord_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EntityRetrieveResponse& EntityRetrieveResponse::default_instance() {
  protobuf_recordserver_2frecord_2eproto::InitDefaults();
  return *internal_default_instance();
}

EntityRetrieveResponse* EntityRetrieveResponse::New(::google::protobuf::Arena* arena) const {
  EntityRetrieveResponse* n = new EntityRetrieveResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EntityRetrieveResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:record.EntityRetrieveResponse)
  table_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && entity_ != NULL) {
    delete entity_;
  }
  entity_ = NULL;
  shard_ = 0u;
}

bool EntityRetrieveResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:record.EntityRetrieveResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 shard = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shard_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string table = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->table().data(), this->table().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "record.EntityRetrieveResponse.table"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bundle.Entity entity = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_entity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:record.EntityRetrieveResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:record.EntityRetrieveResponse)
  return false;
#undef DO_
}

void EntityRetrieveResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:record.EntityRetrieveResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 shard = 1;
  if (this->shard() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->shard(), output);
  }

  // string table = 2;
  if (this->table().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table().data(), this->table().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "record.EntityRetrieveResponse.table");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->table(), output);
  }

  // .bundle.Entity entity = 3;
  if (this->has_entity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->entity_, output);
  }

  // @@protoc_insertion_point(serialize_end:record.EntityRetrieveResponse)
}

::google::protobuf::uint8* EntityRetrieveResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:record.EntityRetrieveResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 shard = 1;
  if (this->shard() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->shard(), target);
  }

  // string table = 2;
  if (this->table().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table().data(), this->table().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "record.EntityRetrieveResponse.table");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->table(), target);
  }

  // .bundle.Entity entity = 3;
  if (this->has_entity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->entity_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:record.EntityRetrieveResponse)
  return target;
}

size_t EntityRetrieveResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:record.EntityRetrieveResponse)
  size_t total_size = 0;

  // string table = 2;
  if (this->table().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->table());
  }

  // .bundle.Entity entity = 3;
  if (this->has_entity()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->entity_);
  }

  // uint32 shard = 1;
  if (this->shard() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->shard());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EntityRetrieveResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:record.EntityRetrieveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const EntityRetrieveResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EntityRetrieveResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:record.EntityRetrieveResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:record.EntityRetrieveResponse)
    MergeFrom(*source);
  }
}

void EntityRetrieveResponse::MergeFrom(const EntityRetrieveResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:record.EntityRetrieveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.table().size() > 0) {

    table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_);
  }
  if (from.has_entity()) {
    mutable_entity()->::bundle::Entity::MergeFrom(from.entity());
  }
  if (from.shard() != 0) {
    set_shard(from.shard());
  }
}

void EntityRetrieveResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:record.EntityRetrieveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityRetrieveResponse::CopyFrom(const EntityRetrieveResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:record.EntityRetrieveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityRetrieveResponse::IsInitialized() const {
  return true;
}

void EntityRetrieveResponse::Swap(EntityRetrieveResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EntityRetrieveResponse::InternalSwap(EntityRetrieveResponse* other) {
  table_.Swap(&other->table_);
  std::swap(entity_, other->entity_);
  std::swap(shard_, other->shard_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EntityRetrieveResponse::GetMetadata() const {
  protobuf_recordserver_2frecord_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_recordserver_2frecord_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EntityRetrieveResponse

// uint32 shard = 1;
void EntityRetrieveResponse::clear_shard() {
  shard_ = 0u;
}
::google::protobuf::uint32 EntityRetrieveResponse::shard() const {
  // @@protoc_insertion_point(field_get:record.EntityRetrieveResponse.shard)
  return shard_;
}
void EntityRetrieveResponse::set_shard(::google::protobuf::uint32 value) {
  
  shard_ = value;
  // @@protoc_insertion_point(field_set:record.EntityRetrieveResponse.shard)
}

// string table = 2;
void EntityRetrieveResponse::clear_table() {
  table_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EntityRetrieveResponse::table() const {
  // @@protoc_insertion_point(field_get:record.EntityRetrieveResponse.table)
  return table_.GetNoArena();
}
void EntityRetrieveResponse::set_table(const ::std::string& value) {
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:record.EntityRetrieveResponse.table)
}
#if LANG_CXX11
void EntityRetrieveResponse::set_table(::std::string&& value) {
  
  table_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:record.EntityRetrieveResponse.table)
}
#endif
void EntityRetrieveResponse::set_table(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:record.EntityRetrieveResponse.table)
}
void EntityRetrieveResponse::set_table(const char* value, size_t size) {
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:record.EntityRetrieveResponse.table)
}
::std::string* EntityRetrieveResponse::mutable_table() {
  
  // @@protoc_insertion_point(field_mutable:record.EntityRetrieveResponse.table)
  return table_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EntityRetrieveResponse::release_table() {
  // @@protoc_insertion_point(field_release:record.EntityRetrieveResponse.table)
  
  return table_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EntityRetrieveResponse::set_allocated_table(::std::string* table) {
  if (table != NULL) {
    
  } else {
    
  }
  table_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), table);
  // @@protoc_insertion_point(field_set_allocated:record.EntityRetrieveResponse.table)
}

// .bundle.Entity entity = 3;
bool EntityRetrieveResponse::has_entity() const {
  return this != internal_default_instance() && entity_ != NULL;
}
void EntityRetrieveResponse::clear_entity() {
  if (GetArenaNoVirtual() == NULL && entity_ != NULL) delete entity_;
  entity_ = NULL;
}
const ::bundle::Entity& EntityRetrieveResponse::entity() const {
  // @@protoc_insertion_point(field_get:record.EntityRetrieveResponse.entity)
  return entity_ != NULL ? *entity_
                         : *::bundle::Entity::internal_default_instance();
}
::bundle::Entity* EntityRetrieveResponse::mutable_entity() {
  
  if (entity_ == NULL) {
    entity_ = new ::bundle::Entity;
  }
  // @@protoc_insertion_point(field_mutable:record.EntityRetrieveResponse.entity)
  return entity_;
}
::bundle::Entity* EntityRetrieveResponse::release_entity() {
  // @@protoc_insertion_point(field_release:record.EntityRetrieveResponse.entity)
  
  ::bundle::Entity* temp = entity_;
  entity_ = NULL;
  return temp;
}
void EntityRetrieveResponse::set_allocated_entity(::bundle::Entity* entity) {
  delete entity_;
  entity_ = entity;
  if (entity) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:record.EntityRetrieveResponse.entity)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntityUpdateRequest::kShardFieldNumber;
const int EntityUpdateRequest::kTableFieldNumber;
const int EntityUpdateRequest::kEntityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntityUpdateRequest::EntityUpdateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_recordserver_2frecord_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:record.EntityUpdateRequest)
}
EntityUpdateRequest::EntityUpdateRequest(const EntityUpdateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.table().size() > 0) {
    table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_);
  }
  if (from.has_entity()) {
    entity_ = new ::bundle::Entity(*from.entity_);
  } else {
    entity_ = NULL;
  }
  shard_ = from.shard_;
  // @@protoc_insertion_point(copy_constructor:record.EntityUpdateRequest)
}

void EntityUpdateRequest::SharedCtor() {
  table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&entity_, 0, reinterpret_cast<char*>(&shard_) -
    reinterpret_cast<char*>(&entity_) + sizeof(shard_));
  _cached_size_ = 0;
}

EntityUpdateRequest::~EntityUpdateRequest() {
  // @@protoc_insertion_point(destructor:record.EntityUpdateRequest)
  SharedDtor();
}

void EntityUpdateRequest::SharedDtor() {
  table_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete entity_;
  }
}

void EntityUpdateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EntityUpdateRequest::descriptor() {
  protobuf_recordserver_2frecord_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_recordserver_2frecord_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EntityUpdateRequest& EntityUpdateRequest::default_instance() {
  protobuf_recordserver_2frecord_2eproto::InitDefaults();
  return *internal_default_instance();
}

EntityUpdateRequest* EntityUpdateRequest::New(::google::protobuf::Arena* arena) const {
  EntityUpdateRequest* n = new EntityUpdateRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EntityUpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:record.EntityUpdateRequest)
  table_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && entity_ != NULL) {
    delete entity_;
  }
  entity_ = NULL;
  shard_ = 0u;
}

bool EntityUpdateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:record.EntityUpdateRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 shard = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shard_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string table = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->table().data(), this->table().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "record.EntityUpdateRequest.table"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bundle.Entity entity = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_entity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:record.EntityUpdateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:record.EntityUpdateRequest)
  return false;
#undef DO_
}

void EntityUpdateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:record.EntityUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 shard = 1;
  if (this->shard() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->shard(), output);
  }

  // string table = 2;
  if (this->table().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table().data(), this->table().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "record.EntityUpdateRequest.table");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->table(), output);
  }

  // .bundle.Entity entity = 3;
  if (this->has_entity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->entity_, output);
  }

  // @@protoc_insertion_point(serialize_end:record.EntityUpdateRequest)
}

::google::protobuf::uint8* EntityUpdateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:record.EntityUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 shard = 1;
  if (this->shard() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->shard(), target);
  }

  // string table = 2;
  if (this->table().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table().data(), this->table().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "record.EntityUpdateRequest.table");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->table(), target);
  }

  // .bundle.Entity entity = 3;
  if (this->has_entity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->entity_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:record.EntityUpdateRequest)
  return target;
}

size_t EntityUpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:record.EntityUpdateRequest)
  size_t total_size = 0;

  // string table = 2;
  if (this->table().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->table());
  }

  // .bundle.Entity entity = 3;
  if (this->has_entity()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->entity_);
  }

  // uint32 shard = 1;
  if (this->shard() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->shard());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EntityUpdateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:record.EntityUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const EntityUpdateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EntityUpdateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:record.EntityUpdateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:record.EntityUpdateRequest)
    MergeFrom(*source);
  }
}

void EntityUpdateRequest::MergeFrom(const EntityUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:record.EntityUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.table().size() > 0) {

    table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_);
  }
  if (from.has_entity()) {
    mutable_entity()->::bundle::Entity::MergeFrom(from.entity());
  }
  if (from.shard() != 0) {
    set_shard(from.shard());
  }
}

void EntityUpdateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:record.EntityUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityUpdateRequest::CopyFrom(const EntityUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:record.EntityUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityUpdateRequest::IsInitialized() const {
  return true;
}

void EntityUpdateRequest::Swap(EntityUpdateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EntityUpdateRequest::InternalSwap(EntityUpdateRequest* other) {
  table_.Swap(&other->table_);
  std::swap(entity_, other->entity_);
  std::swap(shard_, other->shard_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EntityUpdateRequest::GetMetadata() const {
  protobuf_recordserver_2frecord_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_recordserver_2frecord_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EntityUpdateRequest

// uint32 shard = 1;
void EntityUpdateRequest::clear_shard() {
  shard_ = 0u;
}
::google::protobuf::uint32 EntityUpdateRequest::shard() const {
  // @@protoc_insertion_point(field_get:record.EntityUpdateRequest.shard)
  return shard_;
}
void EntityUpdateRequest::set_shard(::google::protobuf::uint32 value) {
  
  shard_ = value;
  // @@protoc_insertion_point(field_set:record.EntityUpdateRequest.shard)
}

// string table = 2;
void EntityUpdateRequest::clear_table() {
  table_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EntityUpdateRequest::table() const {
  // @@protoc_insertion_point(field_get:record.EntityUpdateRequest.table)
  return table_.GetNoArena();
}
void EntityUpdateRequest::set_table(const ::std::string& value) {
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:record.EntityUpdateRequest.table)
}
#if LANG_CXX11
void EntityUpdateRequest::set_table(::std::string&& value) {
  
  table_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:record.EntityUpdateRequest.table)
}
#endif
void EntityUpdateRequest::set_table(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:record.EntityUpdateRequest.table)
}
void EntityUpdateRequest::set_table(const char* value, size_t size) {
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:record.EntityUpdateRequest.table)
}
::std::string* EntityUpdateRequest::mutable_table() {
  
  // @@protoc_insertion_point(field_mutable:record.EntityUpdateRequest.table)
  return table_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EntityUpdateRequest::release_table() {
  // @@protoc_insertion_point(field_release:record.EntityUpdateRequest.table)
  
  return table_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EntityUpdateRequest::set_allocated_table(::std::string* table) {
  if (table != NULL) {
    
  } else {
    
  }
  table_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), table);
  // @@protoc_insertion_point(field_set_allocated:record.EntityUpdateRequest.table)
}

// .bundle.Entity entity = 3;
bool EntityUpdateRequest::has_entity() const {
  return this != internal_default_instance() && entity_ != NULL;
}
void EntityUpdateRequest::clear_entity() {
  if (GetArenaNoVirtual() == NULL && entity_ != NULL) delete entity_;
  entity_ = NULL;
}
const ::bundle::Entity& EntityUpdateRequest::entity() const {
  // @@protoc_insertion_point(field_get:record.EntityUpdateRequest.entity)
  return entity_ != NULL ? *entity_
                         : *::bundle::Entity::internal_default_instance();
}
::bundle::Entity* EntityUpdateRequest::mutable_entity() {
  
  if (entity_ == NULL) {
    entity_ = new ::bundle::Entity;
  }
  // @@protoc_insertion_point(field_mutable:record.EntityUpdateRequest.entity)
  return entity_;
}
::bundle::Entity* EntityUpdateRequest::release_entity() {
  // @@protoc_insertion_point(field_release:record.EntityUpdateRequest.entity)
  
  ::bundle::Entity* temp = entity_;
  entity_ = NULL;
  return temp;
}
void EntityUpdateRequest::set_allocated_entity(::bundle::Entity* entity) {
  delete entity_;
  entity_ = entity;
  if (entity) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:record.EntityUpdateRequest.entity)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntityUpdateResponse::kShardFieldNumber;
const int EntityUpdateResponse::kTableFieldNumber;
const int EntityUpdateResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntityUpdateResponse::EntityUpdateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_recordserver_2frecord_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:record.EntityUpdateResponse)
}
EntityUpdateResponse::EntityUpdateResponse(const EntityUpdateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.table().size() > 0) {
    table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_);
  }
  ::memcpy(&shard_, &from.shard_,
    reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&shard_) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:record.EntityUpdateResponse)
}

void EntityUpdateResponse::SharedCtor() {
  table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&shard_, 0, reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&shard_) + sizeof(result_));
  _cached_size_ = 0;
}

EntityUpdateResponse::~EntityUpdateResponse() {
  // @@protoc_insertion_point(destructor:record.EntityUpdateResponse)
  SharedDtor();
}

void EntityUpdateResponse::SharedDtor() {
  table_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EntityUpdateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EntityUpdateResponse::descriptor() {
  protobuf_recordserver_2frecord_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_recordserver_2frecord_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EntityUpdateResponse& EntityUpdateResponse::default_instance() {
  protobuf_recordserver_2frecord_2eproto::InitDefaults();
  return *internal_default_instance();
}

EntityUpdateResponse* EntityUpdateResponse::New(::google::protobuf::Arena* arena) const {
  EntityUpdateResponse* n = new EntityUpdateResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EntityUpdateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:record.EntityUpdateResponse)
  table_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&shard_, 0, reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&shard_) + sizeof(result_));
}

bool EntityUpdateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:record.EntityUpdateResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 shard = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shard_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string table = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->table().data(), this->table().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "record.EntityUpdateResponse.table"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool result = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:record.EntityUpdateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:record.EntityUpdateResponse)
  return false;
#undef DO_
}

void EntityUpdateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:record.EntityUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 shard = 1;
  if (this->shard() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->shard(), output);
  }

  // string table = 2;
  if (this->table().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table().data(), this->table().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "record.EntityUpdateResponse.table");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->table(), output);
  }

  // bool result = 3;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->result(), output);
  }

  // @@protoc_insertion_point(serialize_end:record.EntityUpdateResponse)
}

::google::protobuf::uint8* EntityUpdateResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:record.EntityUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 shard = 1;
  if (this->shard() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->shard(), target);
  }

  // string table = 2;
  if (this->table().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table().data(), this->table().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "record.EntityUpdateResponse.table");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->table(), target);
  }

  // bool result = 3;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->result(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:record.EntityUpdateResponse)
  return target;
}

size_t EntityUpdateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:record.EntityUpdateResponse)
  size_t total_size = 0;

  // string table = 2;
  if (this->table().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->table());
  }

  // uint32 shard = 1;
  if (this->shard() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->shard());
  }

  // bool result = 3;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EntityUpdateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:record.EntityUpdateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const EntityUpdateResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EntityUpdateResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:record.EntityUpdateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:record.EntityUpdateResponse)
    MergeFrom(*source);
  }
}

void EntityUpdateResponse::MergeFrom(const EntityUpdateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:record.EntityUpdateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.table().size() > 0) {

    table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_);
  }
  if (from.shard() != 0) {
    set_shard(from.shard());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void EntityUpdateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:record.EntityUpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityUpdateResponse::CopyFrom(const EntityUpdateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:record.EntityUpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityUpdateResponse::IsInitialized() const {
  return true;
}

void EntityUpdateResponse::Swap(EntityUpdateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EntityUpdateResponse::InternalSwap(EntityUpdateResponse* other) {
  table_.Swap(&other->table_);
  std::swap(shard_, other->shard_);
  std::swap(result_, other->result_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EntityUpdateResponse::GetMetadata() const {
  protobuf_recordserver_2frecord_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_recordserver_2frecord_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EntityUpdateResponse

// uint32 shard = 1;
void EntityUpdateResponse::clear_shard() {
  shard_ = 0u;
}
::google::protobuf::uint32 EntityUpdateResponse::shard() const {
  // @@protoc_insertion_point(field_get:record.EntityUpdateResponse.shard)
  return shard_;
}
void EntityUpdateResponse::set_shard(::google::protobuf::uint32 value) {
  
  shard_ = value;
  // @@protoc_insertion_point(field_set:record.EntityUpdateResponse.shard)
}

// string table = 2;
void EntityUpdateResponse::clear_table() {
  table_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EntityUpdateResponse::table() const {
  // @@protoc_insertion_point(field_get:record.EntityUpdateResponse.table)
  return table_.GetNoArena();
}
void EntityUpdateResponse::set_table(const ::std::string& value) {
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:record.EntityUpdateResponse.table)
}
#if LANG_CXX11
void EntityUpdateResponse::set_table(::std::string&& value) {
  
  table_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:record.EntityUpdateResponse.table)
}
#endif
void EntityUpdateResponse::set_table(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:record.EntityUpdateResponse.table)
}
void EntityUpdateResponse::set_table(const char* value, size_t size) {
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:record.EntityUpdateResponse.table)
}
::std::string* EntityUpdateResponse::mutable_table() {
  
  // @@protoc_insertion_point(field_mutable:record.EntityUpdateResponse.table)
  return table_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EntityUpdateResponse::release_table() {
  // @@protoc_insertion_point(field_release:record.EntityUpdateResponse.table)
  
  return table_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EntityUpdateResponse::set_allocated_table(::std::string* table) {
  if (table != NULL) {
    
  } else {
    
  }
  table_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), table);
  // @@protoc_insertion_point(field_set_allocated:record.EntityUpdateResponse.table)
}

// bool result = 3;
void EntityUpdateResponse::clear_result() {
  result_ = false;
}
bool EntityUpdateResponse::result() const {
  // @@protoc_insertion_point(field_get:record.EntityUpdateResponse.result)
  return result_;
}
void EntityUpdateResponse::set_result(bool value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:record.EntityUpdateResponse.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntityDeleteRequest::kShardFieldNumber;
const int EntityDeleteRequest::kTableFieldNumber;
const int EntityDeleteRequest::kEntityidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntityDeleteRequest::EntityDeleteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_recordserver_2frecord_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:record.EntityDeleteRequest)
}
EntityDeleteRequest::EntityDeleteRequest(const EntityDeleteRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.table().size() > 0) {
    table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_);
  }
  ::memcpy(&entityid_, &from.entityid_,
    reinterpret_cast<char*>(&shard_) -
    reinterpret_cast<char*>(&entityid_) + sizeof(shard_));
  // @@protoc_insertion_point(copy_constructor:record.EntityDeleteRequest)
}

void EntityDeleteRequest::SharedCtor() {
  table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&entityid_, 0, reinterpret_cast<char*>(&shard_) -
    reinterpret_cast<char*>(&entityid_) + sizeof(shard_));
  _cached_size_ = 0;
}

EntityDeleteRequest::~EntityDeleteRequest() {
  // @@protoc_insertion_point(destructor:record.EntityDeleteRequest)
  SharedDtor();
}

void EntityDeleteRequest::SharedDtor() {
  table_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EntityDeleteRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EntityDeleteRequest::descriptor() {
  protobuf_recordserver_2frecord_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_recordserver_2frecord_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EntityDeleteRequest& EntityDeleteRequest::default_instance() {
  protobuf_recordserver_2frecord_2eproto::InitDefaults();
  return *internal_default_instance();
}

EntityDeleteRequest* EntityDeleteRequest::New(::google::protobuf::Arena* arena) const {
  EntityDeleteRequest* n = new EntityDeleteRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EntityDeleteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:record.EntityDeleteRequest)
  table_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&entityid_, 0, reinterpret_cast<char*>(&shard_) -
    reinterpret_cast<char*>(&entityid_) + sizeof(shard_));
}

bool EntityDeleteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:record.EntityDeleteRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 shard = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shard_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string table = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->table().data(), this->table().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "record.EntityDeleteRequest.table"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 entityid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &entityid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:record.EntityDeleteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:record.EntityDeleteRequest)
  return false;
#undef DO_
}

void EntityDeleteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:record.EntityDeleteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 shard = 1;
  if (this->shard() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->shard(), output);
  }

  // string table = 2;
  if (this->table().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table().data(), this->table().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "record.EntityDeleteRequest.table");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->table(), output);
  }

  // uint64 entityid = 3;
  if (this->entityid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->entityid(), output);
  }

  // @@protoc_insertion_point(serialize_end:record.EntityDeleteRequest)
}

::google::protobuf::uint8* EntityDeleteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:record.EntityDeleteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 shard = 1;
  if (this->shard() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->shard(), target);
  }

  // string table = 2;
  if (this->table().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table().data(), this->table().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "record.EntityDeleteRequest.table");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->table(), target);
  }

  // uint64 entityid = 3;
  if (this->entityid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->entityid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:record.EntityDeleteRequest)
  return target;
}

size_t EntityDeleteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:record.EntityDeleteRequest)
  size_t total_size = 0;

  // string table = 2;
  if (this->table().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->table());
  }

  // uint64 entityid = 3;
  if (this->entityid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->entityid());
  }

  // uint32 shard = 1;
  if (this->shard() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->shard());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EntityDeleteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:record.EntityDeleteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const EntityDeleteRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EntityDeleteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:record.EntityDeleteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:record.EntityDeleteRequest)
    MergeFrom(*source);
  }
}

void EntityDeleteRequest::MergeFrom(const EntityDeleteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:record.EntityDeleteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.table().size() > 0) {

    table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_);
  }
  if (from.entityid() != 0) {
    set_entityid(from.entityid());
  }
  if (from.shard() != 0) {
    set_shard(from.shard());
  }
}

void EntityDeleteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:record.EntityDeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityDeleteRequest::CopyFrom(const EntityDeleteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:record.EntityDeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityDeleteRequest::IsInitialized() const {
  return true;
}

void EntityDeleteRequest::Swap(EntityDeleteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EntityDeleteRequest::InternalSwap(EntityDeleteRequest* other) {
  table_.Swap(&other->table_);
  std::swap(entityid_, other->entityid_);
  std::swap(shard_, other->shard_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EntityDeleteRequest::GetMetadata() const {
  protobuf_recordserver_2frecord_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_recordserver_2frecord_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EntityDeleteRequest

// uint32 shard = 1;
void EntityDeleteRequest::clear_shard() {
  shard_ = 0u;
}
::google::protobuf::uint32 EntityDeleteRequest::shard() const {
  // @@protoc_insertion_point(field_get:record.EntityDeleteRequest.shard)
  return shard_;
}
void EntityDeleteRequest::set_shard(::google::protobuf::uint32 value) {
  
  shard_ = value;
  // @@protoc_insertion_point(field_set:record.EntityDeleteRequest.shard)
}

// string table = 2;
void EntityDeleteRequest::clear_table() {
  table_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EntityDeleteRequest::table() const {
  // @@protoc_insertion_point(field_get:record.EntityDeleteRequest.table)
  return table_.GetNoArena();
}
void EntityDeleteRequest::set_table(const ::std::string& value) {
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:record.EntityDeleteRequest.table)
}
#if LANG_CXX11
void EntityDeleteRequest::set_table(::std::string&& value) {
  
  table_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:record.EntityDeleteRequest.table)
}
#endif
void EntityDeleteRequest::set_table(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:record.EntityDeleteRequest.table)
}
void EntityDeleteRequest::set_table(const char* value, size_t size) {
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:record.EntityDeleteRequest.table)
}
::std::string* EntityDeleteRequest::mutable_table() {
  
  // @@protoc_insertion_point(field_mutable:record.EntityDeleteRequest.table)
  return table_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EntityDeleteRequest::release_table() {
  // @@protoc_insertion_point(field_release:record.EntityDeleteRequest.table)
  
  return table_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EntityDeleteRequest::set_allocated_table(::std::string* table) {
  if (table != NULL) {
    
  } else {
    
  }
  table_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), table);
  // @@protoc_insertion_point(field_set_allocated:record.EntityDeleteRequest.table)
}

// uint64 entityid = 3;
void EntityDeleteRequest::clear_entityid() {
  entityid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 EntityDeleteRequest::entityid() const {
  // @@protoc_insertion_point(field_get:record.EntityDeleteRequest.entityid)
  return entityid_;
}
void EntityDeleteRequest::set_entityid(::google::protobuf::uint64 value) {
  
  entityid_ = value;
  // @@protoc_insertion_point(field_set:record.EntityDeleteRequest.entityid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntityDeleteResponse::kShardFieldNumber;
const int EntityDeleteResponse::kTableFieldNumber;
const int EntityDeleteResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntityDeleteResponse::EntityDeleteResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_recordserver_2frecord_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:record.EntityDeleteResponse)
}
EntityDeleteResponse::EntityDeleteResponse(const EntityDeleteResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.table().size() > 0) {
    table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_);
  }
  ::memcpy(&shard_, &from.shard_,
    reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&shard_) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:record.EntityDeleteResponse)
}

void EntityDeleteResponse::SharedCtor() {
  table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&shard_, 0, reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&shard_) + sizeof(result_));
  _cached_size_ = 0;
}

EntityDeleteResponse::~EntityDeleteResponse() {
  // @@protoc_insertion_point(destructor:record.EntityDeleteResponse)
  SharedDtor();
}

void EntityDeleteResponse::SharedDtor() {
  table_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EntityDeleteResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EntityDeleteResponse::descriptor() {
  protobuf_recordserver_2frecord_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_recordserver_2frecord_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EntityDeleteResponse& EntityDeleteResponse::default_instance() {
  protobuf_recordserver_2frecord_2eproto::InitDefaults();
  return *internal_default_instance();
}

EntityDeleteResponse* EntityDeleteResponse::New(::google::protobuf::Arena* arena) const {
  EntityDeleteResponse* n = new EntityDeleteResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EntityDeleteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:record.EntityDeleteResponse)
  table_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&shard_, 0, reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&shard_) + sizeof(result_));
}

bool EntityDeleteResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:record.EntityDeleteResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 shard = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shard_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string table = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->table().data(), this->table().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "record.EntityDeleteResponse.table"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool result = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:record.EntityDeleteResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:record.EntityDeleteResponse)
  return false;
#undef DO_
}

void EntityDeleteResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:record.EntityDeleteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 shard = 1;
  if (this->shard() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->shard(), output);
  }

  // string table = 2;
  if (this->table().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table().data(), this->table().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "record.EntityDeleteResponse.table");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->table(), output);
  }

  // bool result = 3;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->result(), output);
  }

  // @@protoc_insertion_point(serialize_end:record.EntityDeleteResponse)
}

::google::protobuf::uint8* EntityDeleteResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:record.EntityDeleteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 shard = 1;
  if (this->shard() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->shard(), target);
  }

  // string table = 2;
  if (this->table().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table().data(), this->table().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "record.EntityDeleteResponse.table");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->table(), target);
  }

  // bool result = 3;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->result(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:record.EntityDeleteResponse)
  return target;
}

size_t EntityDeleteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:record.EntityDeleteResponse)
  size_t total_size = 0;

  // string table = 2;
  if (this->table().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->table());
  }

  // uint32 shard = 1;
  if (this->shard() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->shard());
  }

  // bool result = 3;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EntityDeleteResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:record.EntityDeleteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const EntityDeleteResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EntityDeleteResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:record.EntityDeleteResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:record.EntityDeleteResponse)
    MergeFrom(*source);
  }
}

void EntityDeleteResponse::MergeFrom(const EntityDeleteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:record.EntityDeleteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.table().size() > 0) {

    table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_);
  }
  if (from.shard() != 0) {
    set_shard(from.shard());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void EntityDeleteResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:record.EntityDeleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityDeleteResponse::CopyFrom(const EntityDeleteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:record.EntityDeleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityDeleteResponse::IsInitialized() const {
  return true;
}

void EntityDeleteResponse::Swap(EntityDeleteResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EntityDeleteResponse::InternalSwap(EntityDeleteResponse* other) {
  table_.Swap(&other->table_);
  std::swap(shard_, other->shard_);
  std::swap(result_, other->result_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EntityDeleteResponse::GetMetadata() const {
  protobuf_recordserver_2frecord_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_recordserver_2frecord_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EntityDeleteResponse

// uint32 shard = 1;
void EntityDeleteResponse::clear_shard() {
  shard_ = 0u;
}
::google::protobuf::uint32 EntityDeleteResponse::shard() const {
  // @@protoc_insertion_point(field_get:record.EntityDeleteResponse.shard)
  return shard_;
}
void EntityDeleteResponse::set_shard(::google::protobuf::uint32 value) {
  
  shard_ = value;
  // @@protoc_insertion_point(field_set:record.EntityDeleteResponse.shard)
}

// string table = 2;
void EntityDeleteResponse::clear_table() {
  table_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EntityDeleteResponse::table() const {
  // @@protoc_insertion_point(field_get:record.EntityDeleteResponse.table)
  return table_.GetNoArena();
}
void EntityDeleteResponse::set_table(const ::std::string& value) {
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:record.EntityDeleteResponse.table)
}
#if LANG_CXX11
void EntityDeleteResponse::set_table(::std::string&& value) {
  
  table_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:record.EntityDeleteResponse.table)
}
#endif
void EntityDeleteResponse::set_table(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:record.EntityDeleteResponse.table)
}
void EntityDeleteResponse::set_table(const char* value, size_t size) {
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:record.EntityDeleteResponse.table)
}
::std::string* EntityDeleteResponse::mutable_table() {
  
  // @@protoc_insertion_point(field_mutable:record.EntityDeleteResponse.table)
  return table_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EntityDeleteResponse::release_table() {
  // @@protoc_insertion_point(field_release:record.EntityDeleteResponse.table)
  
  return table_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EntityDeleteResponse::set_allocated_table(::std::string* table) {
  if (table != NULL) {
    
  } else {
    
  }
  table_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), table);
  // @@protoc_insertion_point(field_set_allocated:record.EntityDeleteResponse.table)
}

// bool result = 3;
void EntityDeleteResponse::clear_result() {
  result_ = false;
}
bool EntityDeleteResponse::result() const {
  // @@protoc_insertion_point(field_get:record.EntityDeleteResponse.result)
  return result_;
}
void EntityDeleteResponse::set_result(bool value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:record.EntityDeleteResponse.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntitySelectRequest::kShardFieldNumber;
const int EntitySelectRequest::kTableFieldNumber;
const int EntitySelectRequest::kWhereFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntitySelectRequest::EntitySelectRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_recordserver_2frecord_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:record.EntitySelectRequest)
}
EntitySelectRequest::EntitySelectRequest(const EntitySelectRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.table().size() > 0) {
    table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_);
  }
  where_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.where().size() > 0) {
    where_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.where_);
  }
  shard_ = from.shard_;
  // @@protoc_insertion_point(copy_constructor:record.EntitySelectRequest)
}

void EntitySelectRequest::SharedCtor() {
  table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  where_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shard_ = 0u;
  _cached_size_ = 0;
}

EntitySelectRequest::~EntitySelectRequest() {
  // @@protoc_insertion_point(destructor:record.EntitySelectRequest)
  SharedDtor();
}

void EntitySelectRequest::SharedDtor() {
  table_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  where_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EntitySelectRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EntitySelectRequest::descriptor() {
  protobuf_recordserver_2frecord_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_recordserver_2frecord_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EntitySelectRequest& EntitySelectRequest::default_instance() {
  protobuf_recordserver_2frecord_2eproto::InitDefaults();
  return *internal_default_instance();
}

EntitySelectRequest* EntitySelectRequest::New(::google::protobuf::Arena* arena) const {
  EntitySelectRequest* n = new EntitySelectRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EntitySelectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:record.EntitySelectRequest)
  table_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  where_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shard_ = 0u;
}

bool EntitySelectRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:record.EntitySelectRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 shard = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shard_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string table = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->table().data(), this->table().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "record.EntitySelectRequest.table"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string where = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_where()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->where().data(), this->where().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "record.EntitySelectRequest.where"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:record.EntitySelectRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:record.EntitySelectRequest)
  return false;
#undef DO_
}

void EntitySelectRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:record.EntitySelectRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 shard = 1;
  if (this->shard() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->shard(), output);
  }

  // string table = 2;
  if (this->table().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table().data(), this->table().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "record.EntitySelectRequest.table");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->table(), output);
  }

  // string where = 3;
  if (this->where().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->where().data(), this->where().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "record.EntitySelectRequest.where");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->where(), output);
  }

  // @@protoc_insertion_point(serialize_end:record.EntitySelectRequest)
}

::google::protobuf::uint8* EntitySelectRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:record.EntitySelectRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 shard = 1;
  if (this->shard() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->shard(), target);
  }

  // string table = 2;
  if (this->table().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table().data(), this->table().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "record.EntitySelectRequest.table");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->table(), target);
  }

  // string where = 3;
  if (this->where().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->where().data(), this->where().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "record.EntitySelectRequest.where");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->where(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:record.EntitySelectRequest)
  return target;
}

size_t EntitySelectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:record.EntitySelectRequest)
  size_t total_size = 0;

  // string table = 2;
  if (this->table().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->table());
  }

  // string where = 3;
  if (this->where().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->where());
  }

  // uint32 shard = 1;
  if (this->shard() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->shard());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EntitySelectRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:record.EntitySelectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const EntitySelectRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EntitySelectRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:record.EntitySelectRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:record.EntitySelectRequest)
    MergeFrom(*source);
  }
}

void EntitySelectRequest::MergeFrom(const EntitySelectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:record.EntitySelectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.table().size() > 0) {

    table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_);
  }
  if (from.where().size() > 0) {

    where_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.where_);
  }
  if (from.shard() != 0) {
    set_shard(from.shard());
  }
}

void EntitySelectRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:record.EntitySelectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntitySelectRequest::CopyFrom(const EntitySelectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:record.EntitySelectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntitySelectRequest::IsInitialized() const {
  return true;
}

void EntitySelectRequest::Swap(EntitySelectRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EntitySelectRequest::InternalSwap(EntitySelectRequest* other) {
  table_.Swap(&other->table_);
  where_.Swap(&other->where_);
  std::swap(shard_, other->shard_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EntitySelectRequest::GetMetadata() const {
  protobuf_recordserver_2frecord_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_recordserver_2frecord_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EntitySelectRequest

// uint32 shard = 1;
void EntitySelectRequest::clear_shard() {
  shard_ = 0u;
}
::google::protobuf::uint32 EntitySelectRequest::shard() const {
  // @@protoc_insertion_point(field_get:record.EntitySelectRequest.shard)
  return shard_;
}
void EntitySelectRequest::set_shard(::google::protobuf::uint32 value) {
  
  shard_ = value;
  // @@protoc_insertion_point(field_set:record.EntitySelectRequest.shard)
}

// string table = 2;
void EntitySelectRequest::clear_table() {
  table_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EntitySelectRequest::table() const {
  // @@protoc_insertion_point(field_get:record.EntitySelectRequest.table)
  return table_.GetNoArena();
}
void EntitySelectRequest::set_table(const ::std::string& value) {
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:record.EntitySelectRequest.table)
}
#if LANG_CXX11
void EntitySelectRequest::set_table(::std::string&& value) {
  
  table_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:record.EntitySelectRequest.table)
}
#endif
void EntitySelectRequest::set_table(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:record.EntitySelectRequest.table)
}
void EntitySelectRequest::set_table(const char* value, size_t size) {
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:record.EntitySelectRequest.table)
}
::std::string* EntitySelectRequest::mutable_table() {
  
  // @@protoc_insertion_point(field_mutable:record.EntitySelectRequest.table)
  return table_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EntitySelectRequest::release_table() {
  // @@protoc_insertion_point(field_release:record.EntitySelectRequest.table)
  
  return table_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EntitySelectRequest::set_allocated_table(::std::string* table) {
  if (table != NULL) {
    
  } else {
    
  }
  table_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), table);
  // @@protoc_insertion_point(field_set_allocated:record.EntitySelectRequest.table)
}

// string where = 3;
void EntitySelectRequest::clear_where() {
  where_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EntitySelectRequest::where() const {
  // @@protoc_insertion_point(field_get:record.EntitySelectRequest.where)
  return where_.GetNoArena();
}
void EntitySelectRequest::set_where(const ::std::string& value) {
  
  where_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:record.EntitySelectRequest.where)
}
#if LANG_CXX11
void EntitySelectRequest::set_where(::std::string&& value) {
  
  where_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:record.EntitySelectRequest.where)
}
#endif
void EntitySelectRequest::set_where(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  where_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:record.EntitySelectRequest.where)
}
void EntitySelectRequest::set_where(const char* value, size_t size) {
  
  where_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:record.EntitySelectRequest.where)
}
::std::string* EntitySelectRequest::mutable_where() {
  
  // @@protoc_insertion_point(field_mutable:record.EntitySelectRequest.where)
  return where_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EntitySelectRequest::release_where() {
  // @@protoc_insertion_point(field_release:record.EntitySelectRequest.where)
  
  return where_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EntitySelectRequest::set_allocated_where(::std::string* where) {
  if (where != NULL) {
    
  } else {
    
  }
  where_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), where);
  // @@protoc_insertion_point(field_set_allocated:record.EntitySelectRequest.where)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntitySelectResponse::kShardFieldNumber;
const int EntitySelectResponse::kTableFieldNumber;
const int EntitySelectResponse::kEntitiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntitySelectResponse::EntitySelectResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_recordserver_2frecord_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:record.EntitySelectResponse)
}
EntitySelectResponse::EntitySelectResponse(const EntitySelectResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.table().size() > 0) {
    table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_);
  }
  if (from.has_entities()) {
    entities_ = new ::bundle::Entity(*from.entities_);
  } else {
    entities_ = NULL;
  }
  shard_ = from.shard_;
  // @@protoc_insertion_point(copy_constructor:record.EntitySelectResponse)
}

void EntitySelectResponse::SharedCtor() {
  table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&entities_, 0, reinterpret_cast<char*>(&shard_) -
    reinterpret_cast<char*>(&entities_) + sizeof(shard_));
  _cached_size_ = 0;
}

EntitySelectResponse::~EntitySelectResponse() {
  // @@protoc_insertion_point(destructor:record.EntitySelectResponse)
  SharedDtor();
}

void EntitySelectResponse::SharedDtor() {
  table_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete entities_;
  }
}

void EntitySelectResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EntitySelectResponse::descriptor() {
  protobuf_recordserver_2frecord_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_recordserver_2frecord_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EntitySelectResponse& EntitySelectResponse::default_instance() {
  protobuf_recordserver_2frecord_2eproto::InitDefaults();
  return *internal_default_instance();
}

EntitySelectResponse* EntitySelectResponse::New(::google::protobuf::Arena* arena) const {
  EntitySelectResponse* n = new EntitySelectResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EntitySelectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:record.EntitySelectResponse)
  table_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && entities_ != NULL) {
    delete entities_;
  }
  entities_ = NULL;
  shard_ = 0u;
}

bool EntitySelectResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:record.EntitySelectResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 shard = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shard_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string table = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->table().data(), this->table().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "record.EntitySelectResponse.table"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bundle.Entity entities = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_entities()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:record.EntitySelectResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:record.EntitySelectResponse)
  return false;
#undef DO_
}

void EntitySelectResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:record.EntitySelectResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 shard = 1;
  if (this->shard() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->shard(), output);
  }

  // string table = 2;
  if (this->table().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table().data(), this->table().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "record.EntitySelectResponse.table");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->table(), output);
  }

  // .bundle.Entity entities = 3;
  if (this->has_entities()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->entities_, output);
  }

  // @@protoc_insertion_point(serialize_end:record.EntitySelectResponse)
}

::google::protobuf::uint8* EntitySelectResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:record.EntitySelectResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 shard = 1;
  if (this->shard() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->shard(), target);
  }

  // string table = 2;
  if (this->table().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table().data(), this->table().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "record.EntitySelectResponse.table");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->table(), target);
  }

  // .bundle.Entity entities = 3;
  if (this->has_entities()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->entities_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:record.EntitySelectResponse)
  return target;
}

size_t EntitySelectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:record.EntitySelectResponse)
  size_t total_size = 0;

  // string table = 2;
  if (this->table().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->table());
  }

  // .bundle.Entity entities = 3;
  if (this->has_entities()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->entities_);
  }

  // uint32 shard = 1;
  if (this->shard() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->shard());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EntitySelectResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:record.EntitySelectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const EntitySelectResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EntitySelectResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:record.EntitySelectResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:record.EntitySelectResponse)
    MergeFrom(*source);
  }
}

void EntitySelectResponse::MergeFrom(const EntitySelectResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:record.EntitySelectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.table().size() > 0) {

    table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_);
  }
  if (from.has_entities()) {
    mutable_entities()->::bundle::Entity::MergeFrom(from.entities());
  }
  if (from.shard() != 0) {
    set_shard(from.shard());
  }
}

void EntitySelectResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:record.EntitySelectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntitySelectResponse::CopyFrom(const EntitySelectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:record.EntitySelectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntitySelectResponse::IsInitialized() const {
  return true;
}

void EntitySelectResponse::Swap(EntitySelectResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EntitySelectResponse::InternalSwap(EntitySelectResponse* other) {
  table_.Swap(&other->table_);
  std::swap(entities_, other->entities_);
  std::swap(shard_, other->shard_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EntitySelectResponse::GetMetadata() const {
  protobuf_recordserver_2frecord_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_recordserver_2frecord_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EntitySelectResponse

// uint32 shard = 1;
void EntitySelectResponse::clear_shard() {
  shard_ = 0u;
}
::google::protobuf::uint32 EntitySelectResponse::shard() const {
  // @@protoc_insertion_point(field_get:record.EntitySelectResponse.shard)
  return shard_;
}
void EntitySelectResponse::set_shard(::google::protobuf::uint32 value) {
  
  shard_ = value;
  // @@protoc_insertion_point(field_set:record.EntitySelectResponse.shard)
}

// string table = 2;
void EntitySelectResponse::clear_table() {
  table_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EntitySelectResponse::table() const {
  // @@protoc_insertion_point(field_get:record.EntitySelectResponse.table)
  return table_.GetNoArena();
}
void EntitySelectResponse::set_table(const ::std::string& value) {
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:record.EntitySelectResponse.table)
}
#if LANG_CXX11
void EntitySelectResponse::set_table(::std::string&& value) {
  
  table_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:record.EntitySelectResponse.table)
}
#endif
void EntitySelectResponse::set_table(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:record.EntitySelectResponse.table)
}
void EntitySelectResponse::set_table(const char* value, size_t size) {
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:record.EntitySelectResponse.table)
}
::std::string* EntitySelectResponse::mutable_table() {
  
  // @@protoc_insertion_point(field_mutable:record.EntitySelectResponse.table)
  return table_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EntitySelectResponse::release_table() {
  // @@protoc_insertion_point(field_release:record.EntitySelectResponse.table)
  
  return table_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EntitySelectResponse::set_allocated_table(::std::string* table) {
  if (table != NULL) {
    
  } else {
    
  }
  table_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), table);
  // @@protoc_insertion_point(field_set_allocated:record.EntitySelectResponse.table)
}

// .bundle.Entity entities = 3;
bool EntitySelectResponse::has_entities() const {
  return this != internal_default_instance() && entities_ != NULL;
}
void EntitySelectResponse::clear_entities() {
  if (GetArenaNoVirtual() == NULL && entities_ != NULL) delete entities_;
  entities_ = NULL;
}
const ::bundle::Entity& EntitySelectResponse::entities() const {
  // @@protoc_insertion_point(field_get:record.EntitySelectResponse.entities)
  return entities_ != NULL ? *entities_
                         : *::bundle::Entity::internal_default_instance();
}
::bundle::Entity* EntitySelectResponse::mutable_entities() {
  
  if (entities_ == NULL) {
    entities_ = new ::bundle::Entity;
  }
  // @@protoc_insertion_point(field_mutable:record.EntitySelectResponse.entities)
  return entities_;
}
::bundle::Entity* EntitySelectResponse::release_entities() {
  // @@protoc_insertion_point(field_release:record.EntitySelectResponse.entities)
  
  ::bundle::Entity* temp = entities_;
  entities_ = NULL;
  return temp;
}
void EntitySelectResponse::set_allocated_entities(::bundle::Entity* entities) {
  delete entities_;
  entities_ = entities;
  if (entities) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:record.EntitySelectResponse.entities)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace record

// @@protoc_insertion_point(global_scope)
